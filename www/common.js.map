{"version":3,"sources":["./src/app/services/crud/crud.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAC2C;AACoB;AAES;AAIxE,gBAAgB;AAEhB,IAAa,WAAW,GAAxB,MAAa,WAAW;IAEpB,kCAAkC;IAClC,YACY,UAAsB,EACtB,kBAAsC;QADtC,eAAU,GAAV,UAAU,CAAY;QACtB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAElD,UAAU;QACV,+BAA+B;QAC/B,0BAA0B;QAClB,eAAU,GAAG,GAAG,EAAE;YACtB,MAAM,QAAQ,GAAG,IAAI,gEAAW,EAAE,CAAC;YACnC,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;YAEpD,gBAAgB;YAChB,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC;QACjC,CAAC,CAAC;QAsGF,kCAAkC;QAClC,uBAAuB;QACf,YAAO,GAAG,CAAC,QAAQ,EAAE,WAAgB,EAAE,EAAE;YAC7C,0CAA0C;YAC1C,QAAQ,QAAQ,EAAE;gBACd,KAAK,eAAe;oBAChB,iCAAiC;oBACjC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,eAAe,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;oBAE7E,cAAc;oBACd,OAAO,WAAW,CAAC,IAAI,IAAI,EAAE,CAAC;oBAC9B,MAAM;gBAEV,KAAK,WAAW;oBACZ,iCAAiC;oBACjC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;oBAEzE,cAAc;oBACd,OAAO,WAAW,CAAC,IAAI,IAAI,EAAE,CAAC;oBAC9B,MAAM;gBAEV,KAAK,QAAQ;oBACT,iCAAiC;oBACjC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,SAAS,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;oBACvE,cAAc;oBACd,OAAO,WAAW,CAAC,IAAI,IAAI,EAAE,CAAC;oBAC9B,MAAM;gBAEV,KAAK,WAAW;oBACZ,iCAAiC;oBACjC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;oBACzE,cAAc;oBACd,OAAO,WAAW,CAAC,IAAI,IAAI,EAAE,CAAC;oBAC9B,MAAM;gBAEV;oBACI,qBAAqB;oBACrB,OAAO,WAAW,IAAI,EAAE,CAAC;aAChC;YAAA,CAAC;QACN,CAAC,CAAC;QAEF,oBAAoB;QACZ,gBAAW,GAAG,CAAC,QAAa,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IA3JlB,CAAC;IAAA,CAAC;IAaxD,2BAA2B;IACpB,UAAU,CAAC,QAAgB,EAAE,IAAS;QACzC,OAAO,IAAI,CAAC,UAAU;aACjB,IAAI,CAAC,QAAQ,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;aACjD,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;aAC1C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAAA,CAAC;IAEF,8BAA8B;IACvB,YAAY,CAAC,QAAgB;QAChC,OAAO,IAAI,CAAC,UAAU;aACjB,GAAG,CAAC,QAAQ,QAAQ,EAAE,CAAC;aACvB,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;aAC1C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAAA,CAAC;IAGF,kCAAkC;IAC3B,WAAW,CAAC,QAAgB,EAAE,EAAU;QAC3C,OAAO,IAAI,CAAC,UAAU;aACjB,GAAG,CAAC,QAAQ,QAAQ,OAAO,EAAE,EAAE,CAAC;aAChC,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;aAC1C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAAA,CAAC;IAEF,8CAA8C;IACvC,sBAAsB;QACzB,OAAO,IAAI,CAAC,UAAU;aACjB,GAAG,CAAC,sBAAsB,CAAC;aAC3B,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;aACjD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,8CAA8C;IACvC,kBAAkB;QACrB,OAAO,IAAI,CAAC,UAAU;aACjB,GAAG,CAAC,0BAA0B,CAAC;aAC/B,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;aAC7C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,2EAA2E;IACpE,mBAAmB;QACtB,OAAO,IAAI,CAAC,UAAU;aACjB,GAAG,CAAC,sBAAsB,CAAC;aAC3B,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;aAC7C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,oDAAoD;IAC7C,wBAAwB,CAAC,QAAgB,EAAE,IAAY,EAAE,IAAS;QACrE,OAAO,IAAI,CAAC,UAAU;aACjB,KAAK,CAAC,QAAQ,QAAQ,SAAS,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;aAC/D,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;aAC1C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,8BAA8B;IACvB,UAAU,CAAC,QAAgB,EAAE,EAAU;QAC1C,OAAO,IAAI,CAAC,UAAU;aACjB,MAAM,CAAC,QAAQ,QAAQ,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;aACnD,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;aAC1C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAAA,CAAC;IAEF,wCAAwC;IACjC,2BAA2B,CAAC,QAAgB,EAAE,EAAU,EAAE,IAAI,EAAE,YAAiB;QACpF,OAAO,IAAI,CAAC,UAAU;aACjB,KAAK,CAAC,QAAQ,QAAQ,IAAI,EAAE,aAAa,YAAY,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;aACjF,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;aAC1C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAAA,CAAC;IAEF,gCAAgC;IACzB,mBAAmB,CAAC,EAAU;QACjC,OAAO,IAAI,CAAC,UAAU;aACjB,KAAK,CAAC,eAAe,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAC,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;aAC/D,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;aACpC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAAA,CAAC;IAEF,gCAAgC;IACzB,wBAAwB,CAAC,EAAU;QACtC,OAAO,IAAI,CAAC,UAAU;aACjB,KAAK,CAAC,eAAe,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAC,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;aAChE,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;aACpC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAAA,CAAC;CA8CL;;YA9J2B,+DAAU;YACF,mFAAkB;;AALzC,WAAW;IADvB,gEAAU,EAAE;GACA,WAAW,CAkKvB;AAlKuB;AAkKvB,CAAC","file":"common.js","sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { ObservablesService } from \"../observables/observables.service\";\nimport { Subscription } from 'rxjs/internal/Subscription';\n\n\n/* DEFINITION */\n@Injectable()\nexport class CrudService {\n\n    // Inject module(s) in the service\n    constructor(\n        private HttpClient: HttpClient,\n        private ObservablesService: ObservablesService) { };\n\n    // METHODS\n    // ----- REQUEST SETTINGS -----\n    // request headers setting\n    private setHeaders = () => {\n        const myHeader = new HttpHeaders();\n        myHeader.append('Content-Type', 'application/json');\n\n        // return header\n        return { headers: myHeader };\n    };\n\n    // CRUD method: create item\n    public createItem(endpoint: String, data: any): Promise<any> {\n        return this.HttpClient\n            .post(`/api/${endpoint}`, data, this.setHeaders())\n            .toPromise()\n            .then(data => this.getData(endpoint, data))\n            .catch(this.handleError);\n    };\n\n    // CRUD method: get collection\n    public readAllItems(endpoint: string): Promise<any> {\n        return this.HttpClient\n            .get(`/api/${endpoint}`)\n            .toPromise()\n            .then(data => this.getData(endpoint, data))\n            .catch(this.handleError);\n    };\n\n\n    // CRUD method: get one item by id\n    public readOneItem(endpoint: string, id: String): Promise<any> {\n        return this.HttpClient\n            .get(`/api/${endpoint}/id/${id}`)\n            .toPromise()\n            .then(data => this.getData(endpoint, data))\n            .catch(this.handleError);\n    };\n\n    // CRUD: get collection of shopping list items\n    public getItemsOnShoppingList(): Promise<any> {\n        return this.HttpClient\n            .get(\"/api/item?toBuy=true\")\n            .toPromise()\n            .then(data => this.getData('shopping-list', data))\n            .catch(this.handleError);\n    }\n\n    // CRUD: get collection of shopping list items\n    public getMealPlanRecipes(): Promise<any> {\n        return this.HttpClient\n            .get(\"/api/recipe?planned=true\")\n            .toPromise()\n            .then(data => this.getData('meal-plan', data))\n            .catch(this.handleError);\n    }\n\n    // CRUD: get collection of inventory list items (items that have a qty > 0)\n    public getItemsInInventory(): Promise<any> {\n        return this.HttpClient\n            .get(\"/api/item?quantity=1\")\n            .toPromise()\n            .then(data => this.getData('inventory', data))\n            .catch(this.handleError);\n    }\n\n    // CRUD: add or remove element from/to shopping list\n    public toggleItemInShoppingList(endpoint: string, name: string, data: any): Promise<any> {\n        return this.HttpClient\n            .patch(`/api/${endpoint}/name/${name}`, data, this.setHeaders())\n            .toPromise()\n            .then(data => this.getData(endpoint, data))\n            .catch(this.handleError);\n    }\n\n    // CRUD method: delete an item\n    public deleteItem(endpoint: string, id: string): Promise<any> {\n        return this.HttpClient\n            .delete(`/api/${endpoint}/${id}`, this.setHeaders())\n            .toPromise()\n            .then(data => this.getData(endpoint, data))\n            .catch(this.handleError);\n    };\n\n    // CRUD: decrement qty on inventory item\n    public adjustItemInventoryQuantity(endpoint: string, id: string, data, incrementQty: any): Promise<any> {\n        return this.HttpClient\n            .patch(`/api/${endpoint}/${id}?quantity=${incrementQty}`, data, this.setHeaders())\n            .toPromise()\n            .then(data => this.getData(endpoint, data))\n            .catch(this.handleError);\n    };\n\n    // CRUD: add recipe to meal plan\n    public addRecipeToMealPlan(id: string): Promise<any> {\n        return this.HttpClient\n            .patch(`/api/recipe/${id}`, { planned: true}, this.setHeaders())\n            .toPromise()\n            .then(data => this.getData('', data))\n            .catch(this.handleError);\n    };\n\n    // CRUD: add recipe to meal plan\n    public removeRecipeFromMealPlan(id: string): Promise<any> {\n        return this.HttpClient\n            .patch(`/api/recipe/${id}`, { planned: false}, this.setHeaders())\n            .toPromise()\n            .then(data => this.getData('', data))\n            .catch(this.handleError);\n    };\n\n    /* METHODS TO GET API RESPONSES */\n    // Get the API response\n    private getData = (endpoint, apiResponse: any) => {\n        // Switch endpoint to set observable value\n        switch (endpoint) {\n            case 'shopping-list':\n                // Set user info obserrbale value\n                this.ObservablesService.setObservableData('shopping-list', apiResponse.data);\n\n                // Return data\n                return apiResponse.data || {};\n                break;\n\n            case 'inventory':\n                // Set user info obserrbale value\n                this.ObservablesService.setObservableData('inventory', apiResponse.data);\n\n                // Return data\n                return apiResponse.data || {};\n                break;\n\n            case 'recipe':\n                // Set user info obserrbale value\n                this.ObservablesService.setObservableData('recipes', apiResponse.data);\n                // Return data\n                return apiResponse.data || {};\n                break;\n\n            case 'meal-plan':\n                // Set user info obserrbale value\n                this.ObservablesService.setObservableData('meal-plan', apiResponse.data);\n                // Return data\n                return apiResponse.data || {};\n                break;\n\n            default:\n                // Retun data anytime\n                return apiResponse || {};\n        };\n    };\n\n    // Get the API error\n    private handleError = (apiError: any) => Promise.reject(apiError.error);\n\n};\n"],"sourceRoot":"webpack:///"}