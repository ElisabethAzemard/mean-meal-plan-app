{"version":3,"sources":["./src/app/shared/form-module/add-item/add-item.component.html","./src/app/shared/form-module/login-form/login-form.component.html","./src/app/shared/form-module/registration-form/registration-form.component.html","./src/app/shared/form-module/add-item/add-item.component.scss","./src/app/shared/form-module/add-item/add-item.component.ts","./src/app/shared/form-module/form-module.ts","./src/app/shared/form-module/login-form/login-form.component.scss","./src/app/shared/form-module/login-form/login-form.component.ts","./src/app/shared/form-module/registration-form/registration-form.component.scss","./src/app/shared/form-module/registration-form/registration-form.component.ts"],"names":[],"mappings":"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","file":"default~pages-barcode-scanner-barcode-scanner-module~pages-home-page-home-page-module~pages-inventor~9472ef19.js","sourcesContent":["export default \"<h2 class=\\\"title\\\">Add Item to shopping list</h2>\\n<form\\n    [formGroup]=\\\"formData\\\"\\n    (submit)=\\\"addItem.emit(formData.value); resetForm();\\\"\\n    class=\\\"form\\\">\\n    <div class=\\\"field has-addons\\\">\\n        <div class=\\\"control is-expanded\\\">\\n            <input formControlName=\\\"name\\\"\\n                type=\\\"email\\\"\\n                name=\\\"email\\\"\\n                required\\n                minlength=\\\"5\\\"\\n                placeholder=\\\"Add an item...\\\"\\n                class=\\\"input is-primary is-small\\\">\\n        </div>\\n        <div class=\\\"control\\\">\\n            <button type=\\\"submit\\\" class=\\\"button is-primary is-small\\\">\\n                <span class=\\\"icon is-small\\\">\\n                    <fa-icon [icon]=\\\"faCheck\\\"\\n                        aria-role=\\\"button\\\"></fa-icon>\\n                </span>\\n            </button>\\n        </div>\\n    </div>\\n</form>\\n\"","export default \"<h2 class=\\\"title\\\">Connexion</h2>\\n<form [formGroup]=\\\"formData\\\"\\n    (submit)=\\\"formSubmit.emit(formData.value)\\\"\\n    class=\\\"form\\\">\\n    <div class=\\\"field\\\">\\n        <input formControlName=\\\"email\\\"\\n            type=\\\"email\\\"\\n            name=\\\"email\\\"\\n            required\\n            minlength=\\\"5\\\"\\n            placeholder=\\\"Your email...\\\"\\n            class=\\\"input is-primary is-small\\\">\\n    </div>\\n    <div class=\\\"field\\\">\\n        <input formControlName=\\\"password\\\"\\n            type=\\\"password\\\"\\n            name=\\\"password\\\"\\n            required\\n            minlength=\\\"5\\\"\\n            placeholder=\\\"Your password...\\\"\\n            class=\\\"input is-primary is-small\\\">\\n    </div>\\n    <div class=\\\"field level\\\">\\n        <div class=\\\"level-left\\\">\\n            <div class=\\\"level-item\\\">\\n                <button [disabled]=\\\"!formData.valid\\\"\\n                    type=\\\"submit\\\"\\n                    class=\\\"button is-primary is-small\\\">OK</button>\\n            </div>\\n            <div class=\\\"level-item\\\">\\n                <a href=\\\"#\\\"\\n                    role=\\\"button\\\"\\n                    (click)=\\\"notRegistered.emit()\\\">Not registered yet?</a>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\"","export default \"<h2 class=\\\"title\\\">Inscription</h2>\\n<!-- Use the NgModel for two-way data binding -->\\n<form\\n    [formGroup]=\\\"formData\\\"\\n    (submit)=\\\"formSubmit.emit(formData.value)\\\">\\n    <div class=\\\"field\\\">\\n        <label for=\\\"firstName\\\">Votre prénom <span *ngIf=\\\"firstName\\\">Obligatoire</span></label>\\n        <input\\n            formControlName=\\\"firstname\\\"\\n            type=\\\"text\\\"\\n            name=\\\"firstname\\\"\\n            class=\\\"input is-primary is-small\\\">\\n    </div>\\n\\n    <div class=\\\"field\\\">\\n        <label for=\\\"lastName\\\">Votre nom <span *ngIf=\\\"lastName\\\">Obligatoire</span></label>\\n        <input\\n            formControlName=\\\"lastname\\\"\\n            type=\\\"text\\\"\\n            name=\\\"lastname\\\"\\n            class=\\\"input is-primary is-small\\\">\\n    </div>\\n\\n    <div class=\\\"field\\\">\\n        <label for=\\\"email\\\">Votre adresse mail <span *ngIf=\\\"email\\\">Obligatoire</span></label>\\n        <input\\n            formControlName=\\\"email\\\"\\n            type=\\\"email\\\"\\n            name=\\\"email\\\"\\n            class=\\\"input is-primary is-small\\\">\\n    </div>\\n\\n    <div class=\\\"field\\\">\\n        <label for=\\\"password\\\">Votre mot de passe <span *ngIf=\\\"password\\\">Obligatoire</span></label>\\n        <input\\n            formControlName=\\\"password\\\"\\n            type=\\\"password\\\"\\n            name=\\\"password\\\"\\n            class=\\\"input is-primary is-small\\\">\\n    </div>\\n\\n    <div class=\\\"field\\\">\\n        <label for=\\\"repeate-password\\\">Répéter votre mot de passe<span\\n                *ngIf=\\\"repeatpassword\\\">Différent</span></label>\\n        <input\\n            formControlName=\\\"repeatpassword\\\"\\n            type=\\\"password\\\"\\n            name=\\\"repeatpassword\\\"\\n            class=\\\"input is-primary is-small\\\">\\n    </div>\\n\\n    <div class=\\\"field\\\">\\n        <div class=\\\"level-left\\\">\\n            <div class=\\\"level-item\\\">\\n                <button [disabled]=\\\"!formData.valid\\\"\\n                    type=\\\"submit\\\"\\n                    class=\\\"button is-primary is-small\\\">Inscription</button>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9mb3JtLW1vZHVsZS9hZGQtaXRlbS9hZGQtaXRlbS5jb21wb25lbnQuc2NzcyJ9 */\"","/* IMPORTS */\nimport { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\n\n\n/* DEFINITION & EXPORT */\n@Component({\n    selector: 'app-add-item',\n    templateUrl: './add-item.component.html',\n    styleUrls: ['./add-item.component.scss']\n})\nexport class AddItemComponent implements OnInit {\n\n    // PROPERTIES\n    public formData: FormGroup;\n    @Output() addItem = new EventEmitter();\n    faCheck = faCheck;\n\n\n    // DEPENDENCIES INJECTION\n    constructor(private FormBuilder: FormBuilder) { }\n\n\n    // METHODS\n    // reset form\n    private resetForm = () => {\n        this.formData = this.FormBuilder.group({\n            name: [null, Validators.required],\n        });\n    };\n\n\n    // LIFECYCLE HOOKS\n    ngOnInit() {\n        this.resetForm();\n    }\n\n}\n","/* IMPORTS */\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; // To use [(ngModel)]\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { AddItemComponent } from './add-item/add-item.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { RegistrationFormComponent } from \"./registration-form/registration-form.component\";\n\n\n/* DEFINITION */\n@NgModule({\n    declarations: [ RegistrationFormComponent, LoginFormComponent, AddItemComponent],\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, FontAwesomeModule],\n    exports: [ RegistrationFormComponent, LoginFormComponent, AddItemComponent]\n})\n\n\n/* EXPORT */\nexport class AppFormModule { };\n","export default \"@media screen and (max-width: 768px) {\\n  button[type=submit] {\\n    display: flex;\\n    width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9FbGlzYWJldGgvRGVza3RvcC9tZWFsLXBsYW4tYXBwL2FuZ3VsYXJDbGllbnQvc3JjL2FwcC9zaGFyZWQvZm9ybS1tb2R1bGUvbG9naW4tZm9ybS9sb2dpbi1mb3JtLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zaGFyZWQvZm9ybS1tb2R1bGUvbG9naW4tZm9ybS9sb2dpbi1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0k7SUFDSSxhQUFBO0lBQ0EsV0FBQTtFQ0FOO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvZm9ybS1tb2R1bGUvbG9naW4tZm9ybS9sb2dpbi1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3VibWl0IGJ1dHRvbiBmdWxsd2lkdGggb24gbW9iaWxlXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjc2OHB4KSB7XG4gICAgYnV0dG9uW3R5cGU9c3VibWl0XSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbn1cbiIsIkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIGJ1dHRvblt0eXBlPXN1Ym1pdF0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn0iXX0= */\"","/* IMPORTS */\nimport { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\n/* DEFINITION & EXPORT */\n@Component({\n    selector: 'app-login-form',\n    templateUrl: './login-form.component.html',\n    styleUrls: ['./login-form.component.scss']\n})\nexport class LoginFormComponent implements OnInit {\n\n    // PROPERTIES\n    public formData: FormGroup;\n    @Output() formSubmit = new EventEmitter();\n    @Output() notRegistered = new EventEmitter();\n\n\n    // DEPENDENCIES INJECTION\n    constructor(private FormBuilder: FormBuilder) { }\n\n\n    // METHODS\n    // reset form\n    private resetForm = () => {\n        this.formData = this.FormBuilder.group({\n            email: [null, Validators.required],\n            password: [null, Validators.required],\n        });\n    };\n\n\n    // LIFECYCLE HOOKS\n    ngOnInit() {\n        this.resetForm();\n    }\n\n}\n","export default \"@media screen and (max-width: 768px) {\\n  button[type=submit] {\\n    display: flex;\\n    width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9FbGlzYWJldGgvRGVza3RvcC9tZWFsLXBsYW4tYXBwL2FuZ3VsYXJDbGllbnQvc3JjL2FwcC9zaGFyZWQvZm9ybS1tb2R1bGUvcmVnaXN0cmF0aW9uLWZvcm0vcmVnaXN0cmF0aW9uLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9mb3JtLW1vZHVsZS9yZWdpc3RyYXRpb24tZm9ybS9yZWdpc3RyYXRpb24tZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJO0lBQ0ksYUFBQTtJQUNBLFdBQUE7RUNBTjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL2Zvcm0tbW9kdWxlL3JlZ2lzdHJhdGlvbi1mb3JtL3JlZ2lzdHJhdGlvbi1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3VibWl0IGJ1dHRvbiBmdWxsd2lkdGggb24gbW9iaWxlXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjc2OHB4KSB7XG4gICAgYnV0dG9uW3R5cGU9c3VibWl0XSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbn1cbiIsIkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIGJ1dHRvblt0eXBlPXN1Ym1pdF0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn0iXX0= */\"","/* IMPORTS */\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { UserModel } from \"../../../models/user.model\";\n\n\n/* DEFINITION */\n@Component({\n  selector: 'app-registration-form',\n  templateUrl: './registration-form.component.html',\n  styleUrls: ['./registration-form.component.scss']\n})\n\n\n/* EXPORT */\n// export class RegistrationFormComponent implements OnInit {\n//   @Input() formObject: UserModel;\n\n//   // The @Output() decorator enable component to send data to main component with an event\n//   @Output() sendFormData = new EventEmitter();\n\n//   // Create a varible to toggle the form\n//   // public formIsOpen: Boolean = false;\n\n//   // Create an object for errors\n//   public formError;\n\n//   public formData: FormGroup;\n//   @Output() formSubmit = new EventEmitter();\n\n//   constructor(private FormBuilder: FormBuilder) { }\n\n//   // Create a function to reset form error\n//   private resetFormError = () => {\n//     this.formError = {\n//       score: 0,\n//       firstName: false,\n//       lastName: false,\n//       email: false,\n//       password: false,\n//       repeatpassword: false,\n//       cgu: false\n//     };\n\n//     this.formData = this.FormBuilder.group({\n//       firstName: [null, Validators.required],\n//       lastName: [null, Validators.required],\n//       email: [null, Validators.required],\n//       password: [null, Validators.required],\n//       repeatpassword: [null, Validators.required],\n//     });\n//   }\n\n//   // Create a function to manipulate checkbox\n//   // public checkConditions = () => {\n//   //   // Invert value\n//   //   this.formObject.cgu = !this.formObject.cgu;\n\n//   //   // Hide error\n//   //   this.formError.cgu = false;\n//   // }\n\n//   // Creta a function for the form submission\n//   // public formSubmission = () => {\n//   //   // Reset errors\n//   //   this.resetFormError()\n\n//   //   // Test mandatory fields: firstName\n//   //   if (this.formObject.firstName.length <= 1) {\n//   //     this.formError.score++;\n//   //     this.formError.firstName = true;\n//   //   }\n\n//   //   // Test mandatory fields: lastName\n//   //   if (this.formObject.lastName.length <= 1) {\n//   //     this.formError.score++;\n//   //     this.formError.lastName = true;\n//   //   }\n\n//   //   // Test mandatory fields: email\n//   //   if (this.formObject.email.length <= 1) {\n//   //     this.formError.score++;\n//   //     this.formError.email = true;\n//   //   }\n\n//   //   // Test mandatory fields: password\n//   //   if (this.formObject.password.length <= 4) {\n//   //     this.formError.score++;\n//   //     this.formError.password = true;\n//   //   }\n\n//   //   // Test mandatory fields: repeatpassword\n//   //   if (this.formObject.password != this.formObject.repeatpassword) {\n//   //     this.formError.score++;\n//   //     this.formError.repeatpassword = true;\n//   //   }\n\n//   //   // Test mandatory fields: CGU\n//   //   if (!this.formObject.cgu) {\n//   //     this.formError.score++;\n//   //     this.formError.cgu = true;\n//   //   }\n\n//   //   /* FINAL VALIDATION */\n//   //   this.formError.score === 0 ? this.sendFormData.emit(this.formObject) : null;\n//   // }\n\n//   ngOnInit() {\n//     // Reset errors when component is loaded\n//     this.resetFormError()\n//   }\n\n// }\n\nexport class RegistrationFormComponent implements OnInit {\n  // Declarations\n  public formData: FormGroup;\n  @Output() formSubmit = new EventEmitter();\n\n  // Inject FormBuilder\n  constructor(private FormBuilder: FormBuilder) { }\n\n  // Method to reset form\n  private resetForm = () => {\n    this.formData = this.FormBuilder.group({\n      firstname: [null, Validators.required],\n      lastname: [null, Validators.required],\n      email: [null, Validators.required],\n      password: [null, Validators.required],\n      repeatpassword: [null, Validators.required]\n    });\n  };\n\n  // Start\n  ngOnInit() {\n    this.resetForm();\n  }\n}\n"],"sourceRoot":"webpack:///"}